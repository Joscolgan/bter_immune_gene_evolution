#!/bin/env sh
#############################################################################################
##
## Author: Sarah Larragy, Joe Colgan (joscolgan)       	Program: prep_and_run_nsl.sh
##
## Date: 28/04/22
##
## Introduction:
## The purpose of this script is to prepare input files for selscan to perform 
## tests of extended haplotype homozygosity, such as nSL.
## The input file is a filtered VCF (compressed; .gz).  
## The output file is tab-delimited text file containing highest |nsl| score per gene.
##
#############################################################################################

## Extended haplotype homozygosity test (nSL)
## Load R :
module load r

## Make following subdirectories :
mkdir input/variant_files
mkdir input/hap
mkdir input/map
mkdir results

## Take input from the command line :
input_vcf=$1

cd input

## Create a file containing list of chromosome/LG names :
grep -v '#' "$input_vcf" | \
cut -f 1 | sort | uniq > chromosome_list.txt

## Using the chromosome list, create individual vcf files for each chromosome :
while read line
do
vcftools --vcf "$input_vcf"  \
--chr "$line" \
--recode \
--out variant_files/"$line"
done < chromosome_list.txt

## Create a haplotype file for each individual :
for name in variant_files/*.vcf;
do
abbrev_name="$(echo "$name" | cut -d '.' -f 1,2 - | cut -d '/' -f 2 )";
Rscript ../VCF_to_genomatrix_hap.R "$name" hap/"$abbrev_name".gds hap/"$abbrev_name".hap.out map/"$abbrev_name".map.out;
done

## Generate a genetic map :
## This approach works for nsl where genetic distance between snps is not required - only physical distance:
for name in variant_files/*vcf;
do
new_name="$(echo "$name" | cut -d '.' -f 1,2 | cut -d '/' -f 2 )";

## Run plink :
plink --vcf "$name" \
      --double-id \
      --allow-extra-chr \
      --out map/"$new_name";

## Subset columns of interest :
cut -f 1,2,3,4 map/"$new_name".bim > map/"$new_name".tmp;
awk '{ print $1,$2,$4,$4 }' map/"$new_name".tmp | tr ' ' '\t' > map/"$new_name".map;
done

## Remove tmp files :
rm -r vcf/

## Run nsl :
for name in hap/*.out;
do
new_name="$(echo "$name" | cut -d '/' -f 2 | cut -d '.' -f 1,2 )";
selscan \
--threads 20 \
--nsl \
--hap "$name" \
--map map/"$new_name".map \
--out ../results/"$new_name";
done

## Normalise output :
norm --nsl --files ../results/*out
cd ../results

## Add chromosome name to each file generated by normalisation:
for name in *norm;
do
chrom_name="$(echo "$name" | cut -d '.' -f 1 )";
while read line;
do
echo "$chrom_name" >> "$chrom_name".tmp;
done < "$name";
paste "$chrom_name".tmp "$name" >> "$name"_plus_chrom.txt; done 

## Get absolute scores for nsl and combine files, filtering out non-genic regions :
paste <(grep -v ‘#’ vcf | cut -f 1,2,8 | cut -d ‘|’ -f 1-4 | sed ’s/\|/\t/g’ | cut -f 1,2,4,5,6)\
 <(cut -f 8 combined_abs_nsl.txt) > file.txt

## Sort by absolute nsl scores:
sort -k6,6gr file.txt >  file_sorted.txt

while read $line;
do;
grep -w “$line” file_sorted.txt | grep -v ‘intergenic’ | grep -v ‘stream’ | head -n 1 >> top_nsl_per_gene.txt ;
done < gene_list.txt
